{"ast":null,"code":"export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: _ref => {\n          let {\n            from,\n            to,\n            count\n          } = _ref;\n          return `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: _ref2 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref2;\n          return `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل  إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: _ref3 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref3;\n          return `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا توجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'الانتقال إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: _ref4 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref4;\n          return `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: _ref5 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref5;\n          return `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: _ref6 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref6;\n          return `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page}. stránku`;\n          }\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: _ref7 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref7;\n          return `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: _ref8 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref8;\n          return `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: _ref9 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref9;\n          return `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n};\n\n// default\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: _ref10 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref10;\n          return `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:',\n        labelDisplayedRows: _ref11 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref11;\n          return `${from}–${to} / ${count !== -1 ? count : `rohkem kui ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: _ref12 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref12;\n          return `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: _ref13 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref13;\n          return `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: _ref14 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref14;\n          return `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: _ref15 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref15;\n          return `${from}-${to === -1 ? count : to} कुल ${count} में`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n};\n\n// Croatian - Hrvatski\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: _ref16 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref16;\n          return `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang`\n        // emptyLabelText: 'Empty',\n      }\n    },\n\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: _ref17 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref17;\n          return `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: _ref18 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref18;\n          return `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: _ref19 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref19;\n          return `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: _ref20 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref20;\n          return `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: _ref21 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref21;\n          return `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n            return `${page} — бетке өту`;\n          }\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n};\n\n// Macedonian - Македонски\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: _ref22 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref22;\n          return `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\n          }\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: _ref23 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref23;\n          return `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: _ref24 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref24;\n          return `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: _ref25 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref25;\n          return `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: _ref26 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref26;\n          return `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: _ref27 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref27;\n          return `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n};\n\n// Serbian - Srpski\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: _ref28 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref28;\n          return `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: _ref29 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref29;\n          return `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n            return `Перейти на ${page} страницу`;\n          }\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: _ref30 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref30;\n          return `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: _ref31 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref31;\n          return `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: _ref32 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref32;\n          return `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: _ref33 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref33;\n          return `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: _ref34 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref34;\n          return `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const urPK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'راستہ دکھائیں'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        },\n        labelRowsPerPage: 'ایک صفحے پر قطاریں:',\n        labelDisplayedRows: _ref35 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref35;\n          return `${count !== -1 ? `${count} میں سے` : `${to} سے ذیادہ میں سے`} ${from} سے ${to} قطاریں`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستار${value !== 1 ? 'ے' : 'ہ'}`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'کلئیر',\n        closeText: 'بند کریں',\n        loadingText: 'لوڈ ہو رہا ہے۔۔۔',\n        noOptionsText: 'کوئی آپشن نہیں',\n        openText: 'کھولیں'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بند کریں'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'صفحات کی ترتیب',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `صفحہ نمبر ${page}${selected ? '' : ' پر جائیں'}`;\n          }\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: _ref36 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref36;\n          return `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n          if (type === 'last') {\n            return '最后一页';\n          }\n          if (type === 'next') {\n            return '下一页';\n          }\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: _ref37 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref37;\n          return `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: _ref38 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref38;\n          return `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: _ref39 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref39;\n          return `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`;\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};","map":{"version":3,"names":["amET","components","MuiBreadcrumbs","defaultProps","expandText","MuiTablePagination","getItemAriaLabel","type","labelRowsPerPage","labelDisplayedRows","from","to","count","MuiRating","getLabelText","value","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","selected","arEG","arSA","arSD","azAZ","pluralForm","lastDigit","bnBD","bgBG","caES","csCZ","daDK","deDE","elGR","enUS","esES","etEE","faIR","fiFI","frFR","heIL","hiIN","hrHR","lastTwoDigits","includes","huHU","hyAM","idID","isIS","itIT","jaJP","khKH","koKR","kzKZ","mkMK","nbNO","nlNL","plPL","ptBR","ptPT","roRO","srRS","ruRU","siLK","skSK","svSE","thTH","trTR","ukUA","urPK","viVN","zhCN","zhHK","zhTW"],"sources":["/Users/indhuyelineni/Desktop/Projects/React-Dashboard/node_modules/@mui/material/esm/locale/index.js"],"sourcesContent":["export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل  إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا توجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'الانتقال إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page}. stránku`;\n          }\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n};\n\n// default\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `rohkem kui ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n};\n\n// Croatian - Hrvatski\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang`\n        // emptyLabelText: 'Empty',\n      }\n    },\n\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n            return `${page} — бетке өту`;\n          }\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n};\n\n// Macedonian - Македонски\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\n          }\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n};\n\n// Serbian - Srpski\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n            return `Перейти на ${page} страницу`;\n          }\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const urPK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'راستہ دکھائیں'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        },\n        labelRowsPerPage: 'ایک صفحے پر قطاریں:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? `${count} میں سے` : `${to} سے ذیادہ میں سے`} ${from} سے ${to} قطاریں`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستار${value !== 1 ? 'ے' : 'ہ'}`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'کلئیر',\n        closeText: 'بند کریں',\n        loadingText: 'لوڈ ہو رہا ہے۔۔۔',\n        noOptionsText: 'کوئی آپشن نہیں',\n        openText: 'کھولیں'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بند کریں'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'صفحات کی ترتیب',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `صفحہ نمبر ${page}${selected ? '' : ' پر جائیں'}`;\n          }\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n          if (type === 'last') {\n            return '最后一页';\n          }\n          if (type === 'next') {\n            return '下一页';\n          }\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};"],"mappings":"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SAAS,EAAE;MACb;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC;;AAED,OAAO,MAAMkC,IAAI,GAAG;EAClBpD,UAAU,EAAE;IACV;IACA;IACA;IACA;IACA;IACAI,kBAAkB,EAAE;MAClBF,YAAY,EAAE;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAK,gBAAgB,EAAE;QAClB;QACA;MACF;IACF,CAAC;;IAEDK,SAAS,EAAE;MACTV,YAAY,EAAE;QACZW,YAAY,EAAEC,KAAK,IAAK,GAAEA,KAAM;QAChC;MACF;IACF,CAAC;;IAEDE,eAAe,EAAE;MACfd,YAAY,EAAE;QACZe,SAAS,EAAE,OAAO;QAClBC,SAAS,EAAE,OAAO;QAClBC,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,gBAAgB;QAC/BC,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,QAAQ,EAAE;MACRpB,YAAY,EAAE;QACZgB,SAAS,EAAE;MACb;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC;;AAED,OAAO,MAAMmC,IAAI,GAAG;EAClBrD,UAAU,EAAE;IACV;IACA;IACA;IACA;IACA;IACAI,kBAAkB,EAAE;MAClBF,YAAY,EAAE;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAK,gBAAgB,EAAE;QAClB;QACA;MACF;IACF,CAAC;;IAEDK,SAAS,EAAE;MACTV,YAAY,EAAE;QACZW,YAAY,EAAEC,KAAK,IAAK,GAAEA,KAAM,IAAGA,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,UAAW,EAAC;QACzEC,cAAc,EAAE;MAClB;IACF,CAAC;IACDC,eAAe,EAAE;MACfd,YAAY,EAAE;QACZe,SAAS,EAAE,SAAS;Q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"},"metadata":{},"sourceType":"module","externalDependencies":[]}