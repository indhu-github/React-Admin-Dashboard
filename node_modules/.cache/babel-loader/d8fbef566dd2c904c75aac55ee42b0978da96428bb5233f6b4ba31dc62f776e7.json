{"ast":null,"code":"import { buildWarning } from '../../utils/warning';\nconst deprecationWarning = buildWarning(['MUI: The hook useGridState is deprecated and will be removed in the next major version.', 'The two lines below are equivalent', '', 'const [state, setState, forceUpdate] = useGridState(apiRef);', 'const { state, setState, forceUpdate } = apiRef.current']);\n/**\n * @deprecated Use `apiRef.current.state`, `apiRef.current.setState` and `apiRef.current.forceUpdate` instead.\n */\n\nexport const useGridState = apiRef => {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecationWarning();\n  }\n  return [apiRef.current.state, apiRef.current.setState, apiRef.current.forceUpdate];\n};","map":{"version":3,"names":["buildWarning","deprecationWarning","useGridState","apiRef","process","env","NODE_ENV","current","state","setState","forceUpdate"],"sources":["/Users/indhuyelineni/Desktop/Projects/React-Dashboard/node_modules/@mui/x-data-grid/hooks/utils/useGridState.js"],"sourcesContent":["import { buildWarning } from '../../utils/warning';\nconst deprecationWarning = buildWarning(['MUI: The hook useGridState is deprecated and will be removed in the next major version.', 'The two lines below are equivalent', '', 'const [state, setState, forceUpdate] = useGridState(apiRef);', 'const { state, setState, forceUpdate } = apiRef.current']);\n/**\n * @deprecated Use `apiRef.current.state`, `apiRef.current.setState` and `apiRef.current.forceUpdate` instead.\n */\n\nexport const useGridState = apiRef => {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecationWarning();\n  }\n\n  return [apiRef.current.state, apiRef.current.setState, apiRef.current.forceUpdate];\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,qBAAqB;AAClD,MAAMC,kBAAkB,GAAGD,YAAY,CAAC,CAAC,yFAAyF,EAAE,oCAAoC,EAAE,EAAE,EAAE,8DAA8D,EAAE,yDAAyD,CAAC,CAAC;AACzS;AACA;AACA;;AAEA,OAAO,MAAME,YAAY,GAAGC,MAAM,IAAI;EACpC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCL,kBAAkB,EAAE;EACtB;EAEA,OAAO,CAACE,MAAM,CAACI,OAAO,CAACC,KAAK,EAAEL,MAAM,CAACI,OAAO,CAACE,QAAQ,EAAEN,MAAM,CAACI,OAAO,CAACG,WAAW,CAAC;AACpF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}