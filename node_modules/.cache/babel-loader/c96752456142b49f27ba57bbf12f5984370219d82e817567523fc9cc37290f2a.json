{"ast":null,"code":"import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel) {\n  let appender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : console;\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","map":{"version":3,"names":["React","localStorageAvailable","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","name","logLevel","appender","console","minLogLevelIdx","indexOf","Error","logger","reduce","loggerObj","method","idx","args","message","other","useGridLoggerFactory","apiRef","props","current","getLogger","useCallback","toString"],"sources":["/Users/indhuyelineni/Desktop/Projects/React-Dashboard/node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js"],"sourcesContent":["import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\n\nconst noop = () => {};\n\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n\n    return loggerObj;\n  }, {});\n  return logger;\n}\n\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD,MAAMC,UAAU,GAAGD,qBAAqB,EAAE,IAAIE,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;AAE1F,MAAMC,IAAI,GAAG,MAAM,CAAC,CAAC;AAErB,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAEF,IAAI;EACXG,IAAI,EAAEH,IAAI;EACVI,IAAI,EAAEJ,IAAI;EACVK,KAAK,EAAEL;AACT,CAAC;AACD,MAAMM,UAAU,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;AAErD,SAASC,WAAW,CAACC,IAAI,EAAEC,QAAQ,EAAsB;EAAA,IAApBC,QAAQ,uEAAGC,OAAO;EACrD,MAAMC,cAAc,GAAGN,UAAU,CAACO,OAAO,CAACJ,QAAQ,CAAC;EAEnD,IAAIG,cAAc,KAAK,CAAC,CAAC,EAAE;IACzB,MAAM,IAAIE,KAAK,CAAE,kBAAiBL,QAAS,kBAAiB,CAAC;EAC/D;EAEA,MAAMM,MAAM,GAAGT,UAAU,CAACU,MAAM,CAAC,CAACC,SAAS,EAAEC,MAAM,EAAEC,GAAG,KAAK;IAC3D,IAAIA,GAAG,IAAIP,cAAc,EAAE;MACzBK,SAAS,CAACC,MAAM,CAAC,GAAG,YAAa;QAAA,kCAATE,IAAI;UAAJA,IAAI;QAAA;QAC1B,MAAM,CAACC,OAAO,EAAE,GAAGC,KAAK,CAAC,GAAGF,IAAI;QAChCV,QAAQ,CAACQ,MAAM,CAAC,CAAE,QAAOV,IAAK,MAAKa,OAAQ,EAAC,EAAE,GAAGC,KAAK,CAAC;MACzD,CAAC;IACH,CAAC,MAAM;MACLL,SAAS,CAACC,MAAM,CAAC,GAAGlB,IAAI;IAC1B;IAEA,OAAOiB,SAAS;EAClB,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOF,MAAM;AACf;AAEA,OAAO,MAAMQ,oBAAoB,GAAG,CAACC,MAAM,EAAEC,KAAK,KAAK;EACrDD,MAAM,CAACE,OAAO,CAACC,SAAS,GAAGjC,KAAK,CAACkC,WAAW,CAACpB,IAAI,IAAI;IACnD,IAAIZ,UAAU,EAAE;MACd,OAAOW,WAAW,CAACC,IAAI,EAAE,OAAO,EAAEiB,KAAK,CAACV,MAAM,CAAC;IACjD;IAEA,IAAI,CAACU,KAAK,CAAChB,QAAQ,EAAE;MACnB,OAAOR,UAAU;IACnB;IAEA,OAAOM,WAAW,CAACC,IAAI,EAAEiB,KAAK,CAAChB,QAAQ,CAACoB,QAAQ,EAAE,EAAEJ,KAAK,CAACV,MAAM,CAAC;EACnE,CAAC,EAAE,CAACU,KAAK,CAAChB,QAAQ,EAAEgB,KAAK,CAACV,MAAM,CAAC,CAAC;AACpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}