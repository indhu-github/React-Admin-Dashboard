{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","map":{"version":3,"names":["React","PropTypes","MenuItem","GridPreferencePanelsValue","useGridApiContext","useGridRootProps","jsx","_jsx","GridColumnsMenuItem","props","onClick","apiRef","rootProps","showColumns","useCallback","event","current","showPreferences","columns","disableColumnSelector","children","getLocaleText","process","env","NODE_ENV","propTypes","column","object","isRequired","func"],"sources":["/Users/indhuyelineni/Desktop/Projects/React-Dashboard/node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,yBAAyB,QAAQ,oEAAoE;AAC9G,SAASC,iBAAiB,QAAQ,wCAAwC;AAC1E,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAE/C,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;EACnC,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,MAAME,MAAM,GAAGP,iBAAiB,EAAE;EAClC,MAAMQ,SAAS,GAAGP,gBAAgB,EAAE;EACpC,MAAMQ,WAAW,GAAGb,KAAK,CAACc,WAAW,CAACC,KAAK,IAAI;IAC7CL,OAAO,CAACK,KAAK,CAAC;IACdJ,MAAM,CAACK,OAAO,CAACC,eAAe,CAACd,yBAAyB,CAACe,OAAO,CAAC;EACnE,CAAC,EAAE,CAACP,MAAM,EAAED,OAAO,CAAC,CAAC;EAErB,IAAIE,SAAS,CAACO,qBAAqB,EAAE;IACnC,OAAO,IAAI;EACb;EAEA,OAAO,aAAaZ,IAAI,CAACL,QAAQ,EAAE;IACjCQ,OAAO,EAAEG,WAAW;IACpBO,QAAQ,EAAET,MAAM,CAACK,OAAO,CAACK,aAAa,CAAC,uBAAuB;EAChE,CAAC,CAAC;AACJ,CAAC;AAEDC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGhB,mBAAmB,CAACiB,SAAS,GAAG;EACtE;EACA;EACA;EACA;EACAC,MAAM,EAAEzB,SAAS,CAAC0B,MAAM,CAACC,UAAU;EACnClB,OAAO,EAAET,SAAS,CAAC4B,IAAI,CAACD;AAC1B,CAAC,GAAG,KAAK,CAAC;AACV,SAASpB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}