{"ast":null,"code":"import { buildWarning } from '../../utils/warning';\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n};","map":{"version":3,"names":["buildWarning","isOutputSelector","selector","acceptsApiRef","stateNotInitializedWarning","useGridSelector","apiRef","process","env","NODE_ENV","current","state"],"sources":["/Users/indhuyelineni/Desktop/Projects/React-Dashboard/node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js"],"sourcesContent":["import { buildWarning } from '../../utils/warning';\n\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n\n  return selector(apiRef.current.state);\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,qBAAqB;AAElD,SAASC,gBAAgB,CAACC,QAAQ,EAAE;EAClC,OAAOA,QAAQ,CAACC,aAAa;AAC/B;AAEA,MAAMC,0BAA0B,GAAGJ,YAAY,CAAC,CAAC,gFAAgF,EAAE,4DAA4D,CAAC,CAAC;AACjM,OAAO,MAAMK,eAAe,GAAG,CAACC,MAAM,EAAEJ,QAAQ,KAAK;EACnD,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAACH,MAAM,CAACI,OAAO,CAACC,KAAK,EAAE;MACzBP,0BAA0B,EAAE;IAC9B;EACF;EAEA,IAAIH,gBAAgB,CAACC,QAAQ,CAAC,EAAE;IAC9B,OAAOA,QAAQ,CAACI,MAAM,CAAC;EACzB;EAEA,OAAOJ,QAAQ,CAACI,MAAM,CAACI,OAAO,CAACC,KAAK,CAAC;AACvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}